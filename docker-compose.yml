services:
#  satellite_image_processing:
#    build:
#      context: ./app_satellite_image_processing/src/image_processing/
#      dockerfile: Dockerfile
#    container_name: satellite_image_processing
#    env_file:
#      - path: ./app_satellite_image_processing/src/image_processing/.env
#      - path: ./app_satellite_image_processing/docker/docker_envs/.env
#    volumes:
#      - ./app_satellite_image_processing/docker/logs/image_process_extractor:/app/logs
#      - satellite_images:/app/resources/roof_satellite/pictures
#    depends_on:
#      postgres_satellite_image_processing:
#        condition: service_healthy

  upload_images_webpage:
    build:
      context: ./Staging/src/upload_images/
      dockerfile: Dockerfile
    container_name: upload_images_webpage
    ports:
      - "8842:80"
    volumes:
      - satellite_images:/app/uploads

  extract_app:
    build:
      context: ./etl/1_Stage/src/
      dockerfile: Dockerfile
    container_name: extract_app
    env_file:
      - path: ./etl/1_Stage/src/.env
      - path: ./etl/1_Stage/docker/docker_envs/.env
    volumes:
      - ./etl/1_Stage/docker/logs/:/app/logs
    depends_on:
      postgres_satellite_image_processing:
        condition: service_healthy
      postgres_stage:
        condition: service_healthy
      # satellite_image_processing:
        # condition: service_completed_successfully

  transform_app:
    build:
      context: ./etl/2_History/src/
      dockerfile: Dockerfile
    container_name: transform_app
    env_file:
      - path: ./etl/2_history/src/.env
      - path: ./etl/2_history/docker/docker_envs/.env
    volumes:
      - ./etl/2_history/docker/logs/:/app/logs
    depends_on:
      postgres_stage:
        condition: service_healthy
      postgres_history:
        condition: service_healthy
      extract_app:
        condition: service_completed_successfully

  load_app:
     build:
       context: ./Load
       dockerfile: Dockerfile
     container_name: load_app
     env_file:
       - path: etl/3_DM/src/.env
       - path: ./etl/3_DM/docker/docker_envs/.env
     volumes:
       - ./etl/3_DM/docker/logs:/app/logs
     depends_on:
       postgres_history:
         condition: service_healthy
       postgres_star:
         condition: service_healthy
       transform_app:
         condition: service_completed_successfully

  postgres_satellite_image_processing:
    build:
      context: ./app_satellite_image_processing/postgres/
      dockerfile: Dockerfile
    container_name: postgres_satellite_image_processing
    ports:
      - "5432:5432" 
    environment:
      - POSTGRES_DB=satellite_image_processing
      - PGUSER=test
      - POSTGRES_USER=test          
      - POSTGRES_PASSWORD=test        
    volumes:
      - satellite_image_processing:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d satellite_image_processing" ]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres_stage:
    build:
      context: ./etl/1_Stage/postgres/
      dockerfile: Dockerfile
    container_name: postgres_stage
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=stage
      - PGUSER=test
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    volumes:
      - stage:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d stage" ]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres_history:
    build:
      context: ./etl/2_History/postgres/
      dockerfile: Dockerfile
    container_name: postgres_history
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=history
      - PGUSER=test
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    volumes:
      - history:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d history" ]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres_star:
    build:
      context: ./etl/3_DM/postgres/
      dockerfile: Dockerfile
    container_name: postgres_star
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=star
      - PGUSER=test
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    volumes:
      - star:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d star" ]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  satellite_images:
  satellite_image_processing:
  stage:
  history:
  star: